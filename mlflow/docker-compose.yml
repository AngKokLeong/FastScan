# Referenced from https://blog.min.io/setting-up-a-development-machine-with-mlflow-and-minio/

volumes:
  postgres-data:
  minio-data:

networks:
  postgres_db_network:    
      driver: bridge
  minio_network:  
      driver: bridge


services:
  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mlflowdb
    networks:
      - postgres_db_network
    expose:
      - "${PG_PORT}"
    ports:
      - 5432:5432

    healthcheck:
      test: ["CMD", "pg_isready", "-p", "${PG_PORT}", "-U", "${PG_USER}"]
      interval: 5s
      timeout: 5s
      retries: 3

    volumes:
      - postgres-data:/var/lib/postgresql/data
    env_file:
      - path: ./config.env
        required: true




  
  minio:
    restart: always
    image: minio/minio
    container_name: minio
    expose:
      - "9000"
    ports:
      - "${MINIO_PORT}:9000"
      - "${MINIO_CONSOLE_PORT}:9001"
    
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_ADDRESS=${MINIO_ADDRESS}
      - MINIO_PORT=${MINIO_PORT}
      - MINIO_STORAGE_USE_HTTPS=${MINIO_STORAGE_USE_HTTPS}
      - MINIO_CONSOLE_ADDRESS=${MINIO_CONSOLE_ADDRESS}

    networks:
      - postgres_db_network
      - minio_network

    volumes:
      - minio-data:/data
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    command: server /data --console-address ":9001"
    env_file:
      - path: ./config.env
        required: true

  minio-create-bucket:
    image: minio/mc
    depends_on: 
      minio:
        condition: service_healthy
    entrypoint: >
      bash -c "
      mc alias set minio http://minio:9000 minio_user minio_password && 

      if ! mc ls minio/bucket; then
        mc mb minio/bucket
      else
        echo 'bucket already exists'
      fi
      
      "



  mlflow:
    image: ghcr.io/mlflow/mlflow:v2.20.2
    restart: always
    container_name: mlflow_server

    depends_on: 
      minio:
        condition: service_healthy
      postgres:
        condition: service_healthy

    environment:
      - MLFLOW_BACKEND_STORE_URI=postgresql://user:password@db:5432/mlflowdb
      - MLFLOW_ARTIFACTS_DESTINATION=s3://bucket
      - AWS_ACCESS_KEY_ID=${MINIO_ACCESS_KEY}
      - AWS_SECRET_ACCESS_KEY=${MINIO_SECRET_ACCESS_KEY}
      - MLFLOW_S3_ENDPOINT_URL="http://minio:9000""
      - MLFLOW_S3_IGNORE_TLS="true"
    expose:
      - "7000"
    ports:
      - "7000:7000"
    networks:
      - postgres_db_network
      - minio_network

    command: mlflow server --host 0.0.0.0 --port 7000 
    env_file:
      - path: ./config.env
        required: true

      
